# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
      - hotfix*
  tags:
    include:
      - '*'
pr: none

variables:
  isMain: $[eq(variables['Build.SourceBranchName'], 'main')]
  isHotfix: $[startsWith(variables['Build.SourceBranchName'], 'hotfix')]
  isCandidate: $[startsWith(variables['Build.SourceBranchName'], 'rc-')]
  isRelease: $[startsWith(variables['Build.SourceBranchName'], 'v')]

stages:
# Had an option of choosing between stages and Jobs, its not a neccesity to use stages, just my choice
# I just used stages to group jobs together, for e.g: we have 2 sandbox envs, so both deployment jobs are in deploy_sand stage.
# We can easily switch back to jobs if we want.

- stage: Build
  pool: Default
  jobs: 
  - job: Initialize
    steps:
    - script: |
        export GIT_SHA=$(git rev-parse --short HEAD)
        echo "##vso[task.setvariable variable=gitSha;isOutput=true]$GIT_SHA"
        # Get the tag pointing to the current commit
        export GIT_TAG=$(git tag --points-at HEAD)
        echo "##vso[task.setvariable variable=gitTag;isOutput=true]$GIT_TAG"
        echo "isMain : $(isMain)"
        echo "isHotfix: $(isHotfix)"
        echo "isCandidate : $(isCandidate)"
        echo "isRelease: $(isRelease)"
    - script: |
        echo $gitSha
        echo $gitTag
  - job: Build
    dependsOn: Initialize
    condition: or(eq(variables.isMain,true),eq(variables.isHotfix,true))
    variables:
      GIT_SHA: $[ dependencies.Initialize.outputs['set_env.gitSha'] ]
      GIT_TAG: $[ dependencies.Initialize.outputs['set_env.gitTag'] ]
    steps:
    - script: |
        echo "Building code for $(gitSha)"
        echo "image name: $(Build.Repository.Name):$(gitSha)"
      displayName: 'Build'
- stage: Deploy_Dev
  condition: eq(variables.isMain,true)
  pool: Default
  jobs:
  - job: Deploy_Dev
    steps:
    - script: |
        echo "deploying to dev"
      displayName: 'Deploy to dev'
- stage: Deploy_SAND
  pool: Default
  condition: eq(variables.isCandidate,true)
  jobs:
  - job: Deploy_SAND
    steps:
    - script: |
        echo "docker pull image:$gitSHA"
        echo "docker tag image:$gitTAG"
        echo "deploying to SAND"
      displayName: 'Deploy to SAND'
- stage: Deploy_Prod
  condition: eq(variables.isRelease,true)
  pool: Default
  jobs:
  - job: Deploy_Prod
    steps:
    - script: |
        echo "docker pull image:$gitSHA"
        echo "docker tag image:$gitTAG"
        echo "deploying to Prod"
      displayName: 'Deploy to Prod'